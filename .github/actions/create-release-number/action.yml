name: 'Create Release Numbers'
description: 'Creates the current release number based on checked out code'
outputs:
  version-code:
    description: 'The numeric app version'
    value: ${{ steps.version-generator.outputs.version-code }}
  version:
    description: 'The app version'
    value: ${{ steps.version-generator.outputs.version }}
runs:
  using: 'composite'
  steps:
    - name: Set Build Number
      id: version-generator
      shell: bash
      run: |
        set -e
        echo "Starting version generation process"
        
        echo "Running Gradle task to generate version file"
        if ! ./gradlew versionFile --no-configuration-cache; then
          echo "Error: Gradle task failed to execute"
          exit 1
        fi
        
        echo "Verifying version file generation"
        if [ ! -f version.txt ]; then
          echo "Error: version.txt was not generated by Gradle task"
          exit 1
        fi
        
        echo "version.txt contents:"
        cat version.txt
        
        if ! command -v git &> /dev/null; then
          echo "Error: git is not installed or not in PATH"
          exit 1
        fi
        
        echo "Counting commits..."
        if ! COMMITS=$(git rev-list --count HEAD 2>&1); then
          echo "Error counting commits: $COMMITS"
          exit 1
        fi
        echo "Number of commits: $COMMITS"
        
        # Get tag count
        echo "Counting tags..."
          if ! TAGS=$(git tag | grep -v beta | wc -l 2>&1); then
          echo "Error counting tags: $TAGS"
          exit 1
        fi
        echo "Number of tags: $TAGS"
        
        echo "Performing version code calculation..."
        if ! VC=$(( ((COMMITS+TAGS) * 3) << 1 )); then
          echo "Error in version code calculation"
          exit 1
        fi
        echo "Calculated Version Code: $VC"

        echo "Debug information:"
        echo "COMMITS=$COMMITS"
        echo "TAGS=$TAGS"
        echo "VC=$VC"
        
        echo "version-code=$VC" >> $GITHUB_OUTPUT
        
        echo "Reading version from file"
        VERSION=$(cat version.txt)
        if [ -z "$VERSION" ]; then
          echo "Error: version.txt is empty"
          exit 1
        fi
        echo "Version from file: $VERSION"
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        echo "Version generation process completed successfully"