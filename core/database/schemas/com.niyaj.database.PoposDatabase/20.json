{
  "formatVersion": 1,
  "database": {
    "version": 20,
    "identityHash": "b523f9845014003d9736dc84ee7032c7",
    "entities": [
      {
        "tableName": "addonitem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`itemId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `itemName` TEXT NOT NULL, `itemPrice` INTEGER NOT NULL, `isApplicable` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL)",
        "fields": [
          {
            "fieldPath": "itemId",
            "columnName": "itemId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemName",
            "columnName": "itemName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "itemPrice",
            "columnName": "itemPrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isApplicable",
            "columnName": "isApplicable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "itemId"
          ]
        },
        "indices": [
          {
            "name": "index_addonitem_itemId",
            "unique": false,
            "columnNames": [
              "itemId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_addonitem_itemId` ON `${TABLE_NAME}` (`itemId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "address",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`addressId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `addressName` TEXT NOT NULL, `shortName` TEXT NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL)",
        "fields": [
          {
            "fieldPath": "addressId",
            "columnName": "addressId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "addressName",
            "columnName": "addressName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shortName",
            "columnName": "shortName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "addressId"
          ]
        },
        "indices": [
          {
            "name": "index_address_addressId",
            "unique": false,
            "columnNames": [
              "addressId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_address_addressId` ON `${TABLE_NAME}` (`addressId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "charges",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chargesId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `chargesName` TEXT NOT NULL, `chargesPrice` INTEGER NOT NULL, `isApplicable` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL)",
        "fields": [
          {
            "fieldPath": "chargesId",
            "columnName": "chargesId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chargesName",
            "columnName": "chargesName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "chargesPrice",
            "columnName": "chargesPrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isApplicable",
            "columnName": "isApplicable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "chargesId"
          ]
        },
        "indices": [
          {
            "name": "index_charges_chargesId",
            "unique": false,
            "columnNames": [
              "chargesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_charges_chargesId` ON `${TABLE_NAME}` (`chargesId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "category",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`categoryId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `categoryName` TEXT NOT NULL, `isAvailable` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL)",
        "fields": [
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryName",
            "columnName": "categoryName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isAvailable",
            "columnName": "isAvailable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "categoryId"
          ]
        },
        "indices": [
          {
            "name": "index_category_categoryId",
            "unique": false,
            "columnNames": [
              "categoryId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_category_categoryId` ON `${TABLE_NAME}` (`categoryId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "customer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`customerId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `customerPhone` TEXT NOT NULL, `customerName` TEXT, `customerEmail` TEXT, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL)",
        "fields": [
          {
            "fieldPath": "customerId",
            "columnName": "customerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customerPhone",
            "columnName": "customerPhone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "customerName",
            "columnName": "customerName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customerEmail",
            "columnName": "customerEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "customerId"
          ]
        },
        "indices": [
          {
            "name": "index_customer_customerId",
            "unique": false,
            "columnNames": [
              "customerId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_customer_customerId` ON `${TABLE_NAME}` (`customerId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "employee",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`employeeId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `employeeName` TEXT NOT NULL, `employeePhone` TEXT NOT NULL, `employeeSalary` TEXT NOT NULL, `employeePosition` TEXT NOT NULL, `employeeJoinedDate` TEXT NOT NULL, `employeeEmail` TEXT, `employeeSalaryType` TEXT NOT NULL, `employeeType` TEXT NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL)",
        "fields": [
          {
            "fieldPath": "employeeId",
            "columnName": "employeeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "employeeName",
            "columnName": "employeeName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "employeePhone",
            "columnName": "employeePhone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "employeeSalary",
            "columnName": "employeeSalary",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "employeePosition",
            "columnName": "employeePosition",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "employeeJoinedDate",
            "columnName": "employeeJoinedDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "employeeEmail",
            "columnName": "employeeEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "employeeSalaryType",
            "columnName": "employeeSalaryType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "employeeType",
            "columnName": "employeeType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "employeeId"
          ]
        },
        "indices": [
          {
            "name": "index_employee_employeeId",
            "unique": false,
            "columnNames": [
              "employeeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_employee_employeeId` ON `${TABLE_NAME}` (`employeeId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "payment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`paymentId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `employeeId` INTEGER NOT NULL, `paymentAmount` TEXT NOT NULL, `paymentDate` TEXT NOT NULL, `paymentType` TEXT NOT NULL, `paymentMode` TEXT NOT NULL, `paymentNote` TEXT NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL, FOREIGN KEY(`employeeId`) REFERENCES `employee`(`employeeId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "paymentId",
            "columnName": "paymentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "employeeId",
            "columnName": "employeeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentAmount",
            "columnName": "paymentAmount",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentDate",
            "columnName": "paymentDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentType",
            "columnName": "paymentType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentMode",
            "columnName": "paymentMode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentNote",
            "columnName": "paymentNote",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "paymentId"
          ]
        },
        "indices": [
          {
            "name": "index_payment_paymentId",
            "unique": false,
            "columnNames": [
              "paymentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payment_paymentId` ON `${TABLE_NAME}` (`paymentId`)"
          },
          {
            "name": "index_payment_employeeId",
            "unique": false,
            "columnNames": [
              "employeeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payment_employeeId` ON `${TABLE_NAME}` (`employeeId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "employee",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "employeeId"
            ],
            "referencedColumns": [
              "employeeId"
            ]
          }
        ]
      },
      {
        "tableName": "EmployeeWithPaymentCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`employeeId` INTEGER NOT NULL, `paymentId` INTEGER NOT NULL, PRIMARY KEY(`employeeId`, `paymentId`), FOREIGN KEY(`employeeId`) REFERENCES `employee`(`employeeId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`paymentId`) REFERENCES `payment`(`paymentId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "employeeId",
            "columnName": "employeeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentId",
            "columnName": "paymentId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "employeeId",
            "paymentId"
          ]
        },
        "indices": [
          {
            "name": "index_EmployeeWithPaymentCrossRef_employeeId",
            "unique": false,
            "columnNames": [
              "employeeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EmployeeWithPaymentCrossRef_employeeId` ON `${TABLE_NAME}` (`employeeId`)"
          },
          {
            "name": "index_EmployeeWithPaymentCrossRef_paymentId",
            "unique": false,
            "columnNames": [
              "paymentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EmployeeWithPaymentCrossRef_paymentId` ON `${TABLE_NAME}` (`paymentId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "employee",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "employeeId"
            ],
            "referencedColumns": [
              "employeeId"
            ]
          },
          {
            "table": "payment",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "paymentId"
            ],
            "referencedColumns": [
              "paymentId"
            ]
          }
        ]
      },
      {
        "tableName": "absent",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`absentId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `employeeId` INTEGER NOT NULL, `absentReason` TEXT NOT NULL, `absentDate` TEXT NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL, FOREIGN KEY(`employeeId`) REFERENCES `employee`(`employeeId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "absentId",
            "columnName": "absentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "employeeId",
            "columnName": "employeeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "absentReason",
            "columnName": "absentReason",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "absentDate",
            "columnName": "absentDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "absentId"
          ]
        },
        "indices": [
          {
            "name": "index_absent_employeeId",
            "unique": false,
            "columnNames": [
              "employeeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_absent_employeeId` ON `${TABLE_NAME}` (`employeeId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "employee",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "employeeId"
            ],
            "referencedColumns": [
              "employeeId"
            ]
          }
        ]
      },
      {
        "tableName": "EmployeeWithAbsentCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`employeeId` INTEGER NOT NULL, `absentId` INTEGER NOT NULL, PRIMARY KEY(`employeeId`, `absentId`), FOREIGN KEY(`employeeId`) REFERENCES `employee`(`employeeId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`absentId`) REFERENCES `absent`(`absentId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "employeeId",
            "columnName": "employeeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "absentId",
            "columnName": "absentId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "employeeId",
            "absentId"
          ]
        },
        "indices": [
          {
            "name": "index_EmployeeWithAbsentCrossRef_employeeId",
            "unique": false,
            "columnNames": [
              "employeeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EmployeeWithAbsentCrossRef_employeeId` ON `${TABLE_NAME}` (`employeeId`)"
          },
          {
            "name": "index_EmployeeWithAbsentCrossRef_absentId",
            "unique": false,
            "columnNames": [
              "absentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EmployeeWithAbsentCrossRef_absentId` ON `${TABLE_NAME}` (`absentId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "employee",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "employeeId"
            ],
            "referencedColumns": [
              "employeeId"
            ]
          },
          {
            "table": "absent",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "absentId"
            ],
            "referencedColumns": [
              "absentId"
            ]
          }
        ]
      },
      {
        "tableName": "expense",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`expenseId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `expenseName` TEXT NOT NULL, `expenseAmount` TEXT NOT NULL, `expenseDate` TEXT NOT NULL, `expenseNote` TEXT NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL)",
        "fields": [
          {
            "fieldPath": "expenseId",
            "columnName": "expenseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expenseName",
            "columnName": "expenseName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "expenseAmount",
            "columnName": "expenseAmount",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "expenseDate",
            "columnName": "expenseDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "expenseNote",
            "columnName": "expenseNote",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "expenseId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "product",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`productId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `categoryId` INTEGER NOT NULL, `productName` TEXT NOT NULL, `productPrice` INTEGER NOT NULL, `productDescription` TEXT NOT NULL, `productAvailability` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL, FOREIGN KEY(`categoryId`) REFERENCES `category`(`categoryId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productName",
            "columnName": "productName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "productPrice",
            "columnName": "productPrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productDescription",
            "columnName": "productDescription",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "productAvailability",
            "columnName": "productAvailability",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "productId"
          ]
        },
        "indices": [
          {
            "name": "index_product_productId",
            "unique": false,
            "columnNames": [
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_product_productId` ON `${TABLE_NAME}` (`productId`)"
          },
          {
            "name": "index_product_categoryId",
            "unique": false,
            "columnNames": [
              "categoryId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_product_categoryId` ON `${TABLE_NAME}` (`categoryId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "category",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "categoryId"
            ]
          }
        ]
      },
      {
        "tableName": "CategoryWithProductCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`categoryId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, PRIMARY KEY(`productId`, `categoryId`), FOREIGN KEY(`productId`) REFERENCES `product`(`productId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`categoryId`) REFERENCES `category`(`categoryId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "productId",
            "categoryId"
          ]
        },
        "indices": [
          {
            "name": "index_CategoryWithProductCrossRef_categoryId",
            "unique": false,
            "columnNames": [
              "categoryId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CategoryWithProductCrossRef_categoryId` ON `${TABLE_NAME}` (`categoryId`)"
          },
          {
            "name": "index_CategoryWithProductCrossRef_productId",
            "unique": false,
            "columnNames": [
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CategoryWithProductCrossRef_productId` ON `${TABLE_NAME}` (`productId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "product",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "productId"
            ]
          },
          {
            "table": "category",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "categoryId"
            ]
          }
        ]
      },
      {
        "tableName": "cartorder",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`orderId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `orderType` TEXT NOT NULL, `orderStatus` TEXT NOT NULL, `doesChargesIncluded` INTEGER NOT NULL, `addressId` INTEGER NOT NULL, `customerId` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT NULL)",
        "fields": [
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orderType",
            "columnName": "orderType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "orderStatus",
            "columnName": "orderStatus",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "doesChargesIncluded",
            "columnName": "doesChargesIncluded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "addressId",
            "columnName": "addressId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customerId",
            "columnName": "customerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "orderId"
          ]
        },
        "indices": [
          {
            "name": "index_cartorder_addressId",
            "unique": false,
            "columnNames": [
              "addressId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cartorder_addressId` ON `${TABLE_NAME}` (`addressId`)"
          },
          {
            "name": "index_cartorder_customerId",
            "unique": false,
            "columnNames": [
              "customerId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cartorder_customerId` ON `${TABLE_NAME}` (`customerId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "cart_price",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`orderId` INTEGER NOT NULL, `basePrice` INTEGER NOT NULL, `discountPrice` INTEGER NOT NULL, `totalPrice` INTEGER NOT NULL, `createdAt` TEXT NOT NULL, PRIMARY KEY(`orderId`), FOREIGN KEY(`orderId`) REFERENCES `cartorder`(`orderId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "basePrice",
            "columnName": "basePrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountPrice",
            "columnName": "discountPrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalPrice",
            "columnName": "totalPrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "orderId"
          ]
        },
        "indices": [
          {
            "name": "index_cart_price_orderId",
            "unique": false,
            "columnNames": [
              "orderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cart_price_orderId` ON `${TABLE_NAME}` (`orderId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "cartorder",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "orderId"
            ],
            "referencedColumns": [
              "orderId"
            ]
          }
        ]
      },
      {
        "tableName": "cart_addon_items",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`orderId` INTEGER NOT NULL, `itemId` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY(`orderId`, `itemId`), FOREIGN KEY(`orderId`) REFERENCES `cartorder`(`orderId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`itemId`) REFERENCES `addonitem`(`itemId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemId",
            "columnName": "itemId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "orderId",
            "itemId"
          ]
        },
        "indices": [
          {
            "name": "index_cart_addon_items_orderId",
            "unique": false,
            "columnNames": [
              "orderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cart_addon_items_orderId` ON `${TABLE_NAME}` (`orderId`)"
          },
          {
            "name": "index_cart_addon_items_itemId",
            "unique": false,
            "columnNames": [
              "itemId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cart_addon_items_itemId` ON `${TABLE_NAME}` (`itemId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "cartorder",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "orderId"
            ],
            "referencedColumns": [
              "orderId"
            ]
          },
          {
            "table": "addonitem",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "itemId"
            ],
            "referencedColumns": [
              "itemId"
            ]
          }
        ]
      },
      {
        "tableName": "cart_charges",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`orderId` INTEGER NOT NULL, `chargesId` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY(`orderId`, `chargesId`), FOREIGN KEY(`orderId`) REFERENCES `cartorder`(`orderId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`chargesId`) REFERENCES `charges`(`chargesId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chargesId",
            "columnName": "chargesId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "orderId",
            "chargesId"
          ]
        },
        "indices": [
          {
            "name": "index_cart_charges_orderId",
            "unique": false,
            "columnNames": [
              "orderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cart_charges_orderId` ON `${TABLE_NAME}` (`orderId`)"
          },
          {
            "name": "index_cart_charges_chargesId",
            "unique": false,
            "columnNames": [
              "chargesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cart_charges_chargesId` ON `${TABLE_NAME}` (`chargesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "cartorder",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "orderId"
            ],
            "referencedColumns": [
              "orderId"
            ]
          },
          {
            "table": "charges",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chargesId"
            ],
            "referencedColumns": [
              "chargesId"
            ]
          }
        ]
      },
      {
        "tableName": "selected",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`selectedId` TEXT NOT NULL, `orderId` INTEGER NOT NULL, PRIMARY KEY(`selectedId`), FOREIGN KEY(`orderId`) REFERENCES `cartorder`(`orderId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "selectedId",
            "columnName": "selectedId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "selectedId"
          ]
        },
        "indices": [
          {
            "name": "index_selected_selectedId",
            "unique": false,
            "columnNames": [
              "selectedId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_selected_selectedId` ON `${TABLE_NAME}` (`selectedId`)"
          },
          {
            "name": "index_selected_orderId",
            "unique": false,
            "columnNames": [
              "orderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_selected_orderId` ON `${TABLE_NAME}` (`orderId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "cartorder",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "orderId"
            ],
            "referencedColumns": [
              "orderId"
            ]
          }
        ]
      },
      {
        "tableName": "cart",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cartId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `orderId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `quantity` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP, `updatedAt` INTEGER DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY(`orderId`) REFERENCES `cartorder`(`orderId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`productId`) REFERENCES `product`(`productId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "cartId",
            "columnName": "cartId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "CURRENT_TIMESTAMP"
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false,
            "defaultValue": "CURRENT_TIMESTAMP"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cartId"
          ]
        },
        "indices": [
          {
            "name": "index_cart_orderId_productId",
            "unique": false,
            "columnNames": [
              "orderId",
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cart_orderId_productId` ON `${TABLE_NAME}` (`orderId`, `productId`)"
          },
          {
            "name": "index_cart_orderId",
            "unique": false,
            "columnNames": [
              "orderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cart_orderId` ON `${TABLE_NAME}` (`orderId`)"
          },
          {
            "name": "index_cart_productId",
            "unique": false,
            "columnNames": [
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cart_productId` ON `${TABLE_NAME}` (`productId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "cartorder",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "orderId"
            ],
            "referencedColumns": [
              "orderId"
            ]
          },
          {
            "table": "product",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "productId"
            ]
          }
        ]
      },
      {
        "tableName": "profile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`restaurantId` INTEGER NOT NULL, `name` TEXT NOT NULL, `email` TEXT NOT NULL, `primaryPhone` TEXT NOT NULL, `secondaryPhone` TEXT NOT NULL, `tagline` TEXT NOT NULL, `description` TEXT NOT NULL, `address` TEXT NOT NULL, `logo` TEXT NOT NULL, `printLogo` TEXT NOT NULL, `paymentQrCode` TEXT NOT NULL, `createdAt` TEXT NOT NULL, `updatedAt` TEXT, PRIMARY KEY(`restaurantId`))",
        "fields": [
          {
            "fieldPath": "restaurantId",
            "columnName": "restaurantId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "primaryPhone",
            "columnName": "primaryPhone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "secondaryPhone",
            "columnName": "secondaryPhone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tagline",
            "columnName": "tagline",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "logo",
            "columnName": "logo",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "printLogo",
            "columnName": "printLogo",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentQrCode",
            "columnName": "paymentQrCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "restaurantId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "printerInfo",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`printerId` TEXT NOT NULL, `printerDpi` INTEGER NOT NULL, `printerWidth` REAL NOT NULL, `printerNbrLines` INTEGER NOT NULL, `productNameLength` INTEGER NOT NULL, `productWiseReportLimit` INTEGER NOT NULL, `addressWiseReportLimit` INTEGER NOT NULL, `customerWiseReportLimit` INTEGER NOT NULL, `printQRCode` INTEGER NOT NULL, `printResLogo` INTEGER NOT NULL, `printWelcomeText` INTEGER NOT NULL, `createdAt` TEXT NOT NULL, `updatedAt` TEXT, PRIMARY KEY(`printerId`))",
        "fields": [
          {
            "fieldPath": "printerId",
            "columnName": "printerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "printerDpi",
            "columnName": "printerDpi",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerWidth",
            "columnName": "printerWidth",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "printerNbrLines",
            "columnName": "printerNbrLines",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productNameLength",
            "columnName": "productNameLength",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productWiseReportLimit",
            "columnName": "productWiseReportLimit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "addressWiseReportLimit",
            "columnName": "addressWiseReportLimit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customerWiseReportLimit",
            "columnName": "customerWiseReportLimit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printQRCode",
            "columnName": "printQRCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printResLogo",
            "columnName": "printResLogo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printWelcomeText",
            "columnName": "printWelcomeText",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "printerId"
          ]
        },
        "indices": [
          {
            "name": "index_printerInfo_printerId",
            "unique": false,
            "columnNames": [
              "printerId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_printerInfo_printerId` ON `${TABLE_NAME}` (`printerId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "reports",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`reportId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `expensesQty` INTEGER NOT NULL, `expensesAmount` INTEGER NOT NULL, `dineInSalesQty` INTEGER NOT NULL, `dineInSalesAmount` INTEGER NOT NULL, `dineOutSalesQty` INTEGER NOT NULL, `dineOutSalesAmount` INTEGER NOT NULL, `reportDate` TEXT NOT NULL, `createdAt` TEXT NOT NULL, `updatedAt` TEXT)",
        "fields": [
          {
            "fieldPath": "reportId",
            "columnName": "reportId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expensesQty",
            "columnName": "expensesQty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expensesAmount",
            "columnName": "expensesAmount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dineInSalesQty",
            "columnName": "dineInSalesQty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dineInSalesAmount",
            "columnName": "dineInSalesAmount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dineOutSalesQty",
            "columnName": "dineOutSalesQty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dineOutSalesAmount",
            "columnName": "dineOutSalesAmount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportDate",
            "columnName": "reportDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "reportId"
          ]
        },
        "indices": [
          {
            "name": "index_reports_reportId",
            "unique": false,
            "columnNames": [
              "reportId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_reports_reportId` ON `${TABLE_NAME}` (`reportId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "market_type",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`typeId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `typeName` TEXT NOT NULL, `typeDesc` TEXT, `supplierId` INTEGER NOT NULL, `listTypes` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER)",
        "fields": [
          {
            "fieldPath": "typeId",
            "columnName": "typeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "typeName",
            "columnName": "typeName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "typeDesc",
            "columnName": "typeDesc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "supplierId",
            "columnName": "supplierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "listTypes",
            "columnName": "listTypes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "typeId"
          ]
        },
        "indices": [
          {
            "name": "index_market_type_typeId",
            "unique": false,
            "columnNames": [
              "typeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_market_type_typeId` ON `${TABLE_NAME}` (`typeId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "market_item",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`itemId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `typeId` INTEGER NOT NULL, `unitId` INTEGER NOT NULL, `itemName` TEXT NOT NULL, `itemPrice` TEXT, `itemDescription` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER, FOREIGN KEY(`typeId`) REFERENCES `market_type`(`typeId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`unitId`) REFERENCES `measure_unit`(`unitId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "itemId",
            "columnName": "itemId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "typeId",
            "columnName": "typeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unitId",
            "columnName": "unitId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemName",
            "columnName": "itemName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "itemPrice",
            "columnName": "itemPrice",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "itemDescription",
            "columnName": "itemDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "itemId"
          ]
        },
        "indices": [
          {
            "name": "index_market_item_typeId",
            "unique": false,
            "columnNames": [
              "typeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_market_item_typeId` ON `${TABLE_NAME}` (`typeId`)"
          },
          {
            "name": "index_market_item_unitId",
            "unique": false,
            "columnNames": [
              "unitId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_market_item_unitId` ON `${TABLE_NAME}` (`unitId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "market_type",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "typeId"
            ],
            "referencedColumns": [
              "typeId"
            ]
          },
          {
            "table": "measure_unit",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "unitId"
            ],
            "referencedColumns": [
              "unitId"
            ]
          }
        ]
      },
      {
        "tableName": "market_list",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`marketId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `marketDate` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER)",
        "fields": [
          {
            "fieldPath": "marketId",
            "columnName": "marketId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "marketDate",
            "columnName": "marketDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "marketId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "market_list_with_type",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`listWithTypeId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `marketId` INTEGER NOT NULL, `typeId` INTEGER NOT NULL, `listType` TEXT NOT NULL, FOREIGN KEY(`marketId`) REFERENCES `market_list`(`marketId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`typeId`) REFERENCES `market_type`(`typeId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "listWithTypeId",
            "columnName": "listWithTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "marketId",
            "columnName": "marketId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "typeId",
            "columnName": "typeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "listType",
            "columnName": "listType",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "listWithTypeId"
          ]
        },
        "indices": [
          {
            "name": "index_market_list_with_type_marketId",
            "unique": false,
            "columnNames": [
              "marketId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_market_list_with_type_marketId` ON `${TABLE_NAME}` (`marketId`)"
          },
          {
            "name": "index_market_list_with_type_typeId",
            "unique": false,
            "columnNames": [
              "typeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_market_list_with_type_typeId` ON `${TABLE_NAME}` (`typeId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "market_list",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "marketId"
            ],
            "referencedColumns": [
              "marketId"
            ]
          },
          {
            "table": "market_type",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "typeId"
            ],
            "referencedColumns": [
              "typeId"
            ]
          }
        ]
      },
      {
        "tableName": "market_list_with_items",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`listWithTypeId` INTEGER NOT NULL, `itemId` INTEGER NOT NULL, `itemQuantity` REAL NOT NULL, PRIMARY KEY(`listWithTypeId`), FOREIGN KEY(`listWithTypeId`) REFERENCES `market_list_with_type`(`listWithTypeId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`itemId`) REFERENCES `market_item`(`itemId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "listWithTypeId",
            "columnName": "listWithTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemId",
            "columnName": "itemId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemQuantity",
            "columnName": "itemQuantity",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "listWithTypeId"
          ]
        },
        "indices": [
          {
            "name": "index_market_list_with_items_listWithTypeId",
            "unique": false,
            "columnNames": [
              "listWithTypeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_market_list_with_items_listWithTypeId` ON `${TABLE_NAME}` (`listWithTypeId`)"
          },
          {
            "name": "index_market_list_with_items_itemId",
            "unique": false,
            "columnNames": [
              "itemId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_market_list_with_items_itemId` ON `${TABLE_NAME}` (`itemId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "market_list_with_type",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "listWithTypeId"
            ],
            "referencedColumns": [
              "listWithTypeId"
            ]
          },
          {
            "table": "market_item",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "itemId"
            ],
            "referencedColumns": [
              "itemId"
            ]
          }
        ]
      },
      {
        "tableName": "measure_unit",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`unitId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `unitName` TEXT NOT NULL, `unitValue` REAL NOT NULL)",
        "fields": [
          {
            "fieldPath": "unitId",
            "columnName": "unitId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unitName",
            "columnName": "unitName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unitValue",
            "columnName": "unitValue",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "unitId"
          ]
        },
        "indices": [
          {
            "name": "index_measure_unit_unitId",
            "unique": false,
            "columnNames": [
              "unitId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_measure_unit_unitId` ON `${TABLE_NAME}` (`unitId`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [
      {
        "viewName": "product_with_quantity",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT product.categoryId, product.productId, productName, productPrice, COALESCE(cart.quantity, 0) as quantity\n        FROM product\n        LEFT JOIN cart ON product.productId = cart.productId \n        AND CASE WHEN (SELECT orderId FROM selected LIMIT 1) IS NOT NULL\n        THEN cart.orderId = COALESCE((SELECT orderId FROM selected LIMIT 1), 0) ELSE 0 END"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'b523f9845014003d9736dc84ee7032c7')"
    ]
  }
}